---
name: pkg-test

on:
  push:
    branches: [main]

jobs:
  test:
    env:
      COMMIT_MESSAGE: ${{ github.event.commits[0].message }}
    if: ${{ startsWith(github.event.commits[0].message, 'New package ') || startsWith(github.event.commits[0].message, 'Fixed package ')  || startsWith(github.event.commits[0].message, 'Test package ') }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Set Environment Variables"
        run: |
          export PKG_NAME=${COMMIT_MESSAGE#*package }
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV

          echo "PKG_NAME: $PKG_NAME"
          echo "COMMIT_MESSAGE: $COMMIT_MESSAGE"

      - name: "Build indiepkg"
        run: make

      - name: "Setup indiepkg"
        run: ./indiepkg setup -d

      - name: "Add repos"
        run: |
          ./indiepkg repo add https://raw.githubusercontent.com/talwat/indiepkg/main/packages/testing/ -d
          ./indiepkg repo add https://raw.githubusercontent.com/talwat/indiepkg/main/packages/bin/ -d

      - name: "Test installing package"
        run: |
          ./indiepkg install ${{ env.PKG_NAME }} -d -y

      - name: "Test upgrading package"
        run: |
          ./indiepkg upgrade ${{ env.PKG_NAME }} -d -y -f

      - name: "Test re-compiling package"
        run: |
          ./indiepkg re-compile ${{ env.PKG_NAME }} -d -y

      - name: "Test uninstalling package"
        run: |
          ./indiepkg uninstall ${{ env.PKG_NAME }} -d -y
