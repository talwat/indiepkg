---
name: publishing

on:
  push:
    branches: [main]

jobs:
  wait:
    name: wait
    runs-on: ubuntu-latest
    steps:
      - name: Wait for all tests to succeed
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          running-workflow-name: "wait"
          repo-token: ${{ secrets.RELEASE_TOKEN }}
          wait-interval: 10

  release:
    env:
      COMMIT_MESSAGE: ${{ github.event.commits[0].message }}
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.commits[0].message, 'Release ') }}
    needs: [wait]

    steps:
      - name: Setup go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: "Set Environment Variables"
        run: |
          export VERSION=${COMMIT_MESSAGE#*Release }
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          echo "VERSION: $VERSION"
          echo "COMMIT_MESSAGE: $COMMIT_MESSAGE"

      - name: "Build indiepkg"
        run: make all

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest

        with:
          title: ${{ env.VERSION }}
          prerelease: false
          automatic_release_tag: "${{ env.VERSION }}"
          repo_token: ${{ secrets.RELEASE_TOKEN }}
          files: |
            output/*

      - name: Update stable branch
        uses: devmasx/merge-branch@1.4.0
        with:
          type: now
          from_branch: main
          target_branch: stable
          github_token: ${{ github.token }}

  update-testing:
    runs-on: ubuntu-latest
    needs: [wait]

    steps:
      - name: Setup go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: Get version number
        run: | 
          make
          export VERSION=$(./indiepkg raw-version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION: $VERSION"

      - name: Update testing branch
        if: ${{ !endsWith(env.VERSION, 'alpha') && !endsWith(env.VERSION, 'beta') && !endsWith(github.event.commits[0].message, 'dev') }}
        uses: devmasx/merge-branch@1.4.0

        with:
          type: now
          from_branch: main
          target_branch: testing
          github_token: ${{ github.token }}
